generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the User model
model User {
  id              String            @id @default(uuid()) 
  name            String     
  username        String            @unique
  email           String            @unique
  password        String
  role            UserRole          @default(USER)
  activeStatus    UserActiveStatus  @default(ACTIVE)
  profilePhoto    String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  
  bookings        Booking[]
  flats           Flat[]

  @@map("users")
}


// Define the Flat model
model Flat {
  id                   String      @id @default(uuid())
  userId               String
  location             String      
  description          String
  rent                 Int         
  totalBedrooms        Int   
  amenities            String[]
  flatPhotos           String?      
  squareFeet           Int         
  totalRooms           Int         
  utilitiesDescription String 
  advanceAmount        Int         
  availability         Boolean     @default(true)
  createdAt            DateTime    @default(now()) 
  updatedAt            DateTime    @updatedAt    

  user                 User        @relation(fields: [userId], references: [id])
  bookings               Booking[]
  @@map("flats")
}

// Define the Booking model
model Booking {
  id        String           @id @default(uuid())
  flatId    String         
  userId    String    
  status    BookingStatus    @default(PENDING)
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  // Define relationships
  flat      Flat           @relation(fields: [flatId], references: [id])
  user      User           @relation(fields: [userId], references: [id])

  @@map("bookings")
}

enum BookingStatus {
  PENDING
  BOOKED
  REJECTED
}

enum UserRole {
  USER
  ADMIN
}

enum UserActiveStatus {
  ACTIVE
  INACTIVE
}